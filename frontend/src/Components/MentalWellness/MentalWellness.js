import React, { useContext, useState } from 'react'import styled from 'styled-components'import { InnerLayout } from '../../styles/Layouts';import send_icon from '../../img/send_icon.png'import user_icon from '../../img/user_icon.png'import gemini_icon from '../../img/gemini_icon.png'import { Context } from '../../context/Context';function MentalWellness() {  const {onSent,recentPrompt,showResult,loading,resultData,setInput,input} = useContext(Context)  const [selectedModel, setSelectedModel] = useState("deepseek");  const sendMsg = async(query) => {    if (!query.trim()) return;    try {      console.log("Sending mental wellness query:", query);      console.log("Selected model:", selectedModel);      const modelMap = {        "deepseek": "deepseek/deepseek-r1-0528:free",        "llama": "meta-llama/llama-3.2-3b-instruct:free",         "gemma": "google/gemma-2-9b-it:free"      };      const selectedApiModel = modelMap[selectedModel];      const models = selectedApiModel ? [selectedApiModel] : [        "deepseek/deepseek-r1-0528:free",        "meta-llama/llama-3.2-3b-instruct:free",         "google/gemma-2-9b-it:free",        "microsoft/phi-3-mini-128k-instruct:free"      ];      let response = null;      let lastError = null;      for (const model of models) {        try {          console.log(`Trying model: ${model}`);          const apiResponse = await fetch("https://openrouter.ai/api/v1/chat/completions", {            method: "POST",            headers: {              "Authorization": "Bearer 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",              "HTTP-Referer": window.location.origin,              "X-Title": "HealSmart",               "Content-Type": "application/json"            },            body: JSON.stringify({              "model": model,              "messages": [                {                  "role": "system",                  "content": "You are Mind-Bot, a compassionate mental wellness AI assistant. Provide supportive, empathetic responses about mental health concerns. Offer practical coping strategies, emotional support, and wellness guidance. Always emphasize the importance of professional mental health support when needed. Be warm, understanding, and non-judgmental. If someone mentions crisis situations, provide crisis resources."                },                {                  "role": "user",                   "content": query                }              ],              "max_tokens": 700,              "temperature": 0.8            })          });          console.log(`${model} - Response status:`, apiResponse.status);          if (apiResponse.ok) {            const data = await apiResponse.json();            console.log(`${model} - API Response:`, data);            if (data.choices && data.choices[0] && data.choices[0].message) {              response = data.choices[0].message.content;              console.log(`Success with ${model}:`, response);              break;             }          } else {            const errorText = await apiResponse.text();            console.error(`${model} failed with status ${apiResponse.status}:`, errorText);            console.error(`Response headers:`, Object.fromEntries(apiResponse.headers.entries()));            lastError = `Status ${apiResponse.status}: ${errorText}`;          }        } catch (modelError) {          console.error(`${model} network/parsing error:`, modelError);          console.error(`Error details:`, {            name: modelError.name,            message: modelError.message,            stack: modelError.stack          });          lastError = modelError;          continue;         }      }      if (response) {        onSent(query, response);      } else {        console.error("All models failed. Last error:", lastError);        onSent(query, "I'm here to listen and support you. Sometimes I might have technical difficulties, but your well-being matters. If you're experiencing a mental health crisis, please reach out to:\n\nðŸ†˜ **Crisis Resources:**\n- National Suicide Prevention Lifeline: **988**\n- Crisis Text Line: Text **HOME to 741741**\n- Emergency: **911**\n\nYour mental health is important and professional support is available.");      }      setInput("");    } catch (error) {      console.error("Error in sendMsg:", error);      onSent(query, "I'm here to listen and support you. Sometimes I might have technical difficulties, but your well-being matters. If you're in crisis, please reach out to a mental health professional or call **988** for the National Suicide Prevention Lifeline.");      setInput("");    }  };  return (    <MentStyled>      <InnerLayout className='main'>        <div className='nav'>          <h2>Mind-Bot</h2>        </div>        <div className="main-container">          <div className="model-select-box">            <label htmlFor="modelSelect">ðŸ§  Select Model:</label>            <select              id="modelSelect"              value={selectedModel}              onChange={(e) => setSelectedModel(e.target.value)}            >              <option value="deepseek">DeepSeek</option>              <option value="llama">Llama 3.2</option>              <option value="gemma">Gemma 2</option>            </select>          </div>          {!showResult          ?<>            <div className='greet'>            <p><span>Hi, there!</span></p>            <p>How are you feeling today?</p>            </div>          </>          :<div className='result'>              <div className='result-title'>                <img src={user_icon} alt=""/>                <p>{recentPrompt}</p>              </div>              <div className='result-data'>                <img src={gemini_icon} alt=""></img>                {loading                ?<div className='loader'>                    <hr/>                    <hr/>                    <hr/>                </div>                :<p dangerouslySetInnerHTML={{__html:resultData}}></p>                }              </div>            </div>          }          <div className='main-bottom'>            <div className='search-box'>              <input                 onChange={(e)=>setInput(e.target.value)}                 value={input}                 type="text"                 placeholder='Share your thoughts here'                onKeyPress={(e) => {                  if (e.key === 'Enter') {                    sendMsg(input);                  }                }}              />              <div>                <img onClick={()=>sendMsg(input)} src = {send_icon} alt="" style={{cursor: 'pointer'}}/>              </div>            </div>            <p className='bottom-info'>              Mind-Bot cannot replace professional help. If you need it, it will guide you towards qualified mental health resources.            </p>          </div>        </div>      </InnerLayout>    </MentStyled>    )}const MentStyled = styled.nav`  .nav h2{    color: darkviolet;    font-size: 25px;    font-weight: 605;    margin: 11px 12px;  }  .main{      flex: 1;      min-height: 100vh;      padding-bottom: 15vh;      position: relative;  }  .main .nav{    display: flex;    align-items: center;    justify-content: space-between;    font-size: 22px;    padding: 20px;  }  .main-container{    max-width: 900px;    margin: -15px 88px;    color: black;  }  .main .greet{    margin: 50px 0px;    font-size: 40px;    color: #928989;    font-weight: 540;    padding: 20px;  }  .main .greet span{    background: -webkit-linear-gradient(16deg, #4b90ff, #ff5546);    -webkit-background-clip: text;    -webkit-text-fill-color: transparent;  }  .model-select-box{    display: flex;    align-items: center;    gap: 15px;    margin: 20px 40px;    padding: 15px;    background-color: #f8f9fa;    border-radius: 12px;    border: 1px solid #e9ecef;  }  .model-select-box label{    font-weight: 600;    color: #495057;    font-size: 16px;  }  .model-select-box select{    padding: 8px 15px;    border: 2px solid #dee2e6;    border-radius: 8px;    background-color: white;    font-size: 14px;    font-weight: 500;    color: #495057;    cursor: pointer;    transition: border-color 0.3s ease;  }  .model-select-box select:focus{    outline: none;    border-color: #4b90ff;    box-shadow: 0 0 0 3px rgba(75, 144, 255, 0.1);  }  .model-select-box select option{    padding: 10px;    font-weight: 500;  }  .main-bottom{    position: absolute;    bottom: 0;    width: 100%;    max-width: 900px;    padding: 0px 20px;    margin: 70px -48px;  }  .search-box{    display: flex;    align-items: center;    justify-content: space-between;    gap: 20px;    background-color: #f0f4f9;    margin: 10px 40px;    padding: 7px 17px;    border-radius: 50px;  }  .search-box img{    width: 24px;    cursor: pointer;  }  .search-box input{    flex: 1;    background: transparent;    border: none;    outline: none;    padding: 9px;    font-size: 18px;  }  .search-box div{    display: flex;    align-items: center;    gap: 15px;  }  .main .bottom-info{    font-size: 13px;    margin: 15px;    text-align: center;    font-weight: 300px;  }  .result{    padding: 0px 5%;    max-height: 70vh;    overflow-y: scroll;  }  .result::-webkit-scrollbar {    width: 8px;  }  .result::-webkit-scrollbar-thumb {    background: #ccc;    border-radius: 4px;  }  .result::-webkit-scrollbar-track {    background: #f1f1f1;  }  .result-title{    margin: 40px 0px;    display: flex;    align-items: center;    gap: 20px;  }  .result img{    width: 40px;    border-radius: 50%;    opacity: 59%;  }  .result-data{    display: flex;    align-items: start;    gap: 20px;  }  .loader{    width: 100%;    display: flex;    flex-direction: column;    gap: 10px;  }  .loader hr{    border-radius: 4px;    border: none;    background-color: #f6f7f8;    background: linear-gradient(to right, #D5A8FF, #f6f7f8, #D5A8FF);    background-size: 800px 50px;    height: 20px;    animation: loader 3s infinite linear;                                                   }  @keyframes loader {    0%{      background-position: -800px 0px;    }    100%{      background-position: 800px 0px;    }  }  .result-data p{    font-size: 17px;    font-weight: 300;    line-height: 1.8;  }`;export default MentalWellness